package JSX.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptJSXAttribute = createDescriptorForJSXAttribute();
  /*package*/ final ConceptDescriptor myConceptJSXFile = createDescriptorForJSXFile();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, "jetbrains.mps.core.xml");
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, "jetbrains.mps.core.xml");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptJSXAttribute, myConceptJSXFile);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.JSXAttribute:
        return myConceptJSXAttribute;
      case LanguageConceptSwitch.JSXFile:
        return myConceptJSXFile;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForJSXAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("JSX", "JSXAttribute", 0xde8c8c5ea61e4f8bL, 0xbbd9356ad0debde1L, 0x772e8ab13d45e710L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.core.xml.structure.XmlAttribute", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L);
    b.origin("r:bfbd0886-7f28-46e8-8fd6-70c61186b27f(JSX.structure)/8587954033283950352");
    b.version(2);
    b.alias("jsx attribute");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJSXFile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("JSX", "JSXFile", 0xde8c8c5ea61e4f8bL, 0xbbd9356ad0debde1L, 0x3bf465b8a90b043eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:bfbd0886-7f28-46e8-8fd6-70c61186b27f(JSX.structure)/4320189786339607614");
    b.version(2);
    b.aggregate("elements", 0x3bf465b8a90b0465L).target(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549486dL).optional(false).ordered(true).multiple(true).origin("4320189786339607653").done();
    b.alias("JSX");
    return b.create();
  }
}
